Q1:A 
Q2: df.groupby([‘Accessories’, ‘customer’]).quantity.sum()
Q3: A 
Q4:
import pandas as pd
def healthExp(df):
    #Your Code Goes Here
    bins = [1969, 1980, 1990, 2000, 2010, 2021]
    labels = ['(1969, 1980]','(1980, 1990]','(1990, 2000]','(2000, 2010]','(2010, 2021]']
    df['year_ranges'] = pd.cut(df['Year'], bins = bins, labels = labels)
    results = df.groupby('year_ranges')['Spending_USD'].mean().round(3).reset_index()
    results.rename(columns={'Spending_USD':'avg_expenditure'}, inplace=True)
    results.set_index('year_ranges', inplace = True)
    results.index.name='Year'
    return results

Q5:
import pandas as pd

def generate_pivot_table(data):
    '''
    input:
    data -> the dataframe provided to the function
    
    output:
    result -> the pivoted data required by question
    '''
    result = None
    
    # Your Code Starts here
    result = pd.pivot_table(data, values='Sales', index=['Region'], aggfunc='sum', fill_value=0, sort=True)
    
    # Your Code ends here
    return result


    
--------------Additional Question------
AQ1:
import pandas as pd
def lifeExp(df):
    #Your Code Goes Heret
    df = df.melt(id_vars = ['Country'], value_vars=df.columns[1:], var_name='Year', value_name = 'Life_Expectancy')
    df = df.groupby(by='Year').mean().sort_values(by='Life_Expectancy',ascending=False).head(5)
    return df

AQ2:
import pandas as pd
def timeOfDay(df):
    # Your Code Goes Here
    df['pickup'] = pd.to_datetime(df['pickup'])
    df['dropoff'] = pd.to_datetime(df['dropoff'])
    def label_hour(dt):
        hour = dt.hour
        if hour >=0 and hour < 6:
            return 'morning'
        elif hour >=6 and hour <12:
            return 'day'
        elif hour >=12 and hour <18:
            return 'afternoon'
        else:
            return 'night'  

    df['time_of_day'] = df['pickup'].apply(label_hour)
    df_new = df['time_of_day'].value_counts().reindex(['afternoon', 'morning', 'night', 'day']).fillna(0).astype('int64')
    df_new.index.name = 'time_of_day'
    df_new.name = 'pickup'
    df_new = df_new.sort_values(ascending=False)
    
    
    return df_new