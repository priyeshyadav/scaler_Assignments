Q1:
def even_odd(A):
    diff = 0
    for element in A:
        if element%2 == 0:
            diff = diff + element
        else:
            diff = diff - element    
    return diff

Q2:
def calculate_sum(input_list):
    sum = 0
    for element in input_list:
        sum = sum + element
    print(sum)

Q3:
def duplicate(ls,n):
    ans = False
    for i in range(n-1):
        if ls[i] == ls[i+1]:
            ans = True
            return ans
    return ans

Q4:
def first_multiple(ls,x):
    ans = -1
    for element in ls:
        if element % x == 0:
            ans = element
            return ans    
    return ans

Q5:
if (ele % 2 != 0): res.append(ele)

-------------------------------------------------------------------------

AQ1:
def ins_lst():
    lst = []
    N = int(input())
    for i in range(N):
        element = int(input())
        lst.append(element)
    X = int(input())
    Y = int(input())
    lst.insert(X-1,Y) # Since X is 1 based index , while Python uses 0 based index.
    for element in lst:
        print(element, end=' ')

ins_lst()

AQ2:
def product(lst):
    result = 1
    for element in lst:
        if element == 0:
            return 0
        result = result * element
    return result

 AQ3:
 def shift():
    lst = []
    N = int(input())
    for i in range(N):
        element = int(input())
        lst.append(element)
    if lst:
        lst.insert(0,lst.pop())    
    return lst

AQ4:
def rev_lst():
    lst = []
    N = int(input())
    for i in range(N):
        element = int(input())
        lst.append(element)
    for i in range(-1,-(len(lst)+1),-1):
        print(lst[i], end=" ")

rev_lst()

AQ5:
def neg_lst():
    lst = []
    N = int(input())
    for i in range(N):
        element  = int(input())
        lst.append(element)
    for element in lst:
        if element < 0:
            print(element, end=' ')

neg_lst()


AQ6:
def divisible(A):
    lst = []
    for element in A:
        if element % 5 == 0 and element % 7 == 0:
            lst.append(element)
    return lst
